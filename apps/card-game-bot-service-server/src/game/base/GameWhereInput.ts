/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { StringFilter } from "../../util/StringFilter";
import { MoveListRelationFilter } from "../../move/base/MoveListRelationFilter";
import { PlayerWhereUniqueInput } from "../../player/base/PlayerWhereUniqueInput";
import { EnumGameStatus } from "./EnumGameStatus";

@InputType()
class GameWhereInput {
  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  endTime?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => MoveListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MoveListRelationFilter)
  @IsOptional()
  @Field(() => MoveListRelationFilter, {
    nullable: true,
  })
  moves?: MoveListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PlayerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PlayerWhereUniqueInput)
  @IsOptional()
  @Field(() => PlayerWhereUniqueInput, {
    nullable: true,
  })
  player?: PlayerWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  startTime?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumGameStatus,
  })
  @IsEnum(EnumGameStatus)
  @IsOptional()
  @Field(() => EnumGameStatus, {
    nullable: true,
  })
  status?: "Option1";
}

export { GameWhereInput as GameWhereInput };
